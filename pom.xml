<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.9</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.dupenghao.dph</groupId>
    <artifactId>knife4j-auto-config</artifactId>
    <version>1.0</version>
    <name>knife4j-auto-config</name>
    <description>knife4j-auto-config</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <github.global.server>github</github.global.server>
        <personalRepoPath>D:/mvn-repo</personalRepoPath>
    </properties>

    <distributionManagement>
        <repository>
            <id>gitee</id>
            <url>file:${personalRepoPath}/conmmon</url>
        </repository>
    </distributionManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>2.0.9</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!--编译插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

<!--            添加源文件插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

<!--            &lt;!&ndash;本地部署配置&ndash;&gt;-->
<!--            <plugin>-->
<!--                <artifactId>maven-deploy-plugin</artifactId>-->
<!--                <version>2.8.2</version>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash; altDeploymentRepository ：指定替代方案应该部署项目工件的存储库（除了指定的工件）。 &ndash;&gt;-->
<!--                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo-->
<!--                    </altDeploymentRepository>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--            &lt;!&ndash;本地部署配置&ndash;&gt;-->

<!--            &lt;!&ndash;发布到远程仓库配置&ndash;&gt;-->
<!--            &lt;!&ndash;源码&ndash;&gt;-->
<!--            &lt;!&ndash;      <plugin>&ndash;&gt;-->
<!--            &lt;!&ndash;        <groupId>org.apache.maven.plugins</groupId>&ndash;&gt;-->
<!--            &lt;!&ndash;        <artifactId>maven-source-plugin</artifactId>&ndash;&gt;-->
<!--            &lt;!&ndash;        <version>3.2.1</version>&ndash;&gt;-->
<!--            &lt;!&ndash;        <executions>&ndash;&gt;-->
<!--            &lt;!&ndash;          <execution>&ndash;&gt;-->
<!--            &lt;!&ndash;            <id>attach-sources</id>&ndash;&gt;-->
<!--            &lt;!&ndash;            <goals>&ndash;&gt;-->
<!--            &lt;!&ndash;              <goal>jar-no-fork</goal>&ndash;&gt;-->
<!--            &lt;!&ndash;            </goals>&ndash;&gt;-->
<!--            &lt;!&ndash;          </execution>&ndash;&gt;-->
<!--            &lt;!&ndash;        </executions>&ndash;&gt;-->
<!--            &lt;!&ndash;      </plugin>&ndash;&gt;-->

<!--            &lt;!&ndash;github上传插件,用于修改后的发布,执行 mvn clean deploy 自动打包上传到github&ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>com.github.github</groupId>-->
<!--                <artifactId>site-maven-plugin</artifactId>-->
<!--                <version>0.12</version>-->
<!--                <configuration>-->
<!--                    <message>Creating site for ${project.artifactId} ${project.version}</message>-->
<!--                    <server>github</server>-->
<!--                    <noJekyll>true</noJekyll>-->
<!--                    &lt;!&ndash;本地jar地址, 对应上面的altDeploymentRepository&ndash;&gt;-->
<!--                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>-->
<!--                    &lt;!&ndash;分支&ndash;&gt;-->
<!--                    <branch>refs/heads/master</branch>-->
<!--                    <merge>true</merge>-->

<!--                    <includes>-->
<!--                        <include>**/*</include>-->
<!--                    </includes>-->
<!--                    &lt;!&ndash;对应github上创建的仓库名称 name&ndash;&gt;-->
<!--                    <repositoryName>mvn-repo</repositoryName>-->
<!--                    &lt;!&ndash;github登录账号 对应的密码存在maven的setting.xml文件中&ndash;&gt;-->
<!--                    &lt;!&ndash;由github组织拥有，则该值将是组织名称，如果由用户拥有，则该值将是用户名&ndash;&gt;-->
<!--                    <repositoryOwner>xx81-123xb</repositoryOwner>-->
<!--                </configuration>-->

<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>site</goal>-->
<!--                        </goals>-->
<!--                        <phase>deploy</phase>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--            &lt;!&ndash;发布到远程仓库配置&ndash;&gt;-->

        </plugins>
    </build>

</project>
